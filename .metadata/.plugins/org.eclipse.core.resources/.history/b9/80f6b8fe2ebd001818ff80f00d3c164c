package com.example.musicp;


import java.util.ArrayList;

import com.example.musicp.*;


import android.Manifest;
import android.app.Activity;
import android.app.AppComponentFactory;
import android.content.ContentResolver;
import android.content.Context;
import android.content.pm.PackageManager;
import android.net.Uri;
import android.os.Bundle;
import android.provider.MediaStore;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Toast;
import android.database.Cursor;
import androidx.*;


public   class MainActivity extends Activity {
	
	private static final int MY_PERMISSION_REQUEST=1;
	ArrayList<String> arrayList;
	ListView listview;
	ArrayAdapter<String> adapter;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		/*
		if (contextCompat.chechContextPermission(MainActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {
			
			if (ActivityCompat.showIdShowRequestPermisionRationals(MainActivity.this, Manifest.permission.READ_EXTERNAL_STORAGE)) {
				ActivityCompat.requestPermission(MainActivity.this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, MY_PERMISSION_REQUEST);
			}else{
				ActivityCompat.requestPermissions(MainActivity.this, new String[] {Manifest.permission.READ_EXTERNAL_STORAGE}, MY_PERMISSION_REQUEST);
			}
			
		}else {
			doStuff();
		}*/
		
	}
	
	public void doStuff(){
		
		ListView listView = (ListView) findViewById(R.id.listView);
		arrayList = new ArrayList<String>();
		getMusic();
		adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, arrayList);
		listView.setAdapter(adapter);
		
		listView.setOnItemClickListener(new AdapterView.OnItemClickListener(){

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				// TODO Auto-generated method stub
				
			}
		});
		
		
	
	}
	
	public void getMusic(){
		ContentResolver contentResolver = getContentResolver();
		Uri songUri = MediaStore.Audio.Media.EXTERNAL_CONTENT_URI;
		Cursor songCursor =contentResolver.query(songUri, null , null, null, null);
		
		if (songCursor != null && ((android.database.Cursor) songCursor).moveToFirst()) {
			int songTitle = ((android.database.Cursor) songCursor).getColumnIndex(MediaStore.Audio.Media.TITLE);
			int songArtista = ((android.database.Cursor) songCursor).getColumnIndex(MediaStore.Audio.Media.ARTIST);
			
			do {
				String currentTitle = ((android.database.Cursor) songCursor).getString(songTitle);
				String currentArtista = ((android.database.Cursor) songCursor).getString(songArtista);
				arrayList.add(currentTitle + "\n" + currentArtista);
			} while (((android.database.Cursor) songCursor).moveToNext());
		}
	}
	
	@Override
	public   void onRequestPermissionsResult (int requestCode, String[] permissions, int[] grantResults) {
		
		switch (requestCode) {
		case MY_PERMISSION_REQUEST:
			if (grantResults.length >0 && grantResults[0] == PackageManager.PERMISSION_GRANTED){
				if (ContextCompat.checkSelfPermission(MainActivity.this,Manifest.permission.READ_EXTERNAL_STORAGE ) == PackageManager.PERMISSION_GRANTED) {
					Toast.makeText(this, "Permission granted",Toast.LENGTH_SHORT).show();
					
					doStuff();
				}else {
					Toast.makeText(this, "not Permission granted",Toast.LENGTH_SHORT).show();
					finish();
				}
			}
			return;
	}
		
	
	
}

}
/*
@Override
public <onRequestPermissionsResult> void (int requestCode, @NotNull String[] permissions, @NotNull int [] grantResults){
	
	super.onRequestPermissionsResult(requestCode,permissions,grantResults);
}*/
 //https://www.youtube.com/watch?v=aZiRJCWpFhE
//https://youtu.be/aZiRJCWpFhE

 
